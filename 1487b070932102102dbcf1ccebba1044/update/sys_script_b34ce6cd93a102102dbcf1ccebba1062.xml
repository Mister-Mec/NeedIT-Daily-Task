<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>test business</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var newState = current.state.getValue();
    var allowedStates = ['7', '6', '5']; // 7: Resolved, 6: Closed, 5: Canceled

    if (allowedStates.indexOf(newState) !== -1) {
        // Get the associated problem record
        var problemID = current.problem_id.getValue();
        var problemRecord = new GlideRecord('problem');
        problemRecord.get(problemID);

        // Check if the associated problem is not resolved or closed
        var problemState = problemRecord.state.getValue();
        var openProblemStates = ['1', '2', '3', '4']; // 1: New, 2: Active, 3: Awaiting User Info, 4: Awaiting Evidence

        if (openProblemStates.indexOf(problemState) !== -1) {
            // Prevent the state change and display an error message
            gs.addErrorMessage('The associated problem is not resolved or closed. You cannot change the incident state to ' + current.state.getDisplayValue());
            current.setAbortAction(true);
        }
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-04-12 09:09:50</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b34ce6cd93a102102dbcf1ccebba1062</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>test business</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIT" source="x_1329796_needit">1487b070932102102dbcf1ccebba1044</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIT">1487b070932102102dbcf1ccebba1044</sys_scope>
        <sys_update_name>sys_script_b34ce6cd93a102102dbcf1ccebba1062</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-12 09:09:50</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b34ce6cd93a102102dbcf1ccebba1062"/>
</record_update>
